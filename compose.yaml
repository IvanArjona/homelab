x-env: &env
  PUID: ${PUID}
  GUID: ${GUID}
  TZ: ${TZ}

x-base: &base
  restart: unless-stopped
  environment: *env
  networks:
    homelab:

services:
  dockerproxy:
    <<: *base
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      <<: *env
      CONTAINERS: 1 # Allow access to viewing containers
      POST: 0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  traefik:
    <<: *base
    image: traefik:v3.4
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.resolver.acme.dnschallenge=true
      - --certificatesresolvers.resolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.resolver.acme.email=postmaster@${DOMAIN}
      - --certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json
    environment:
      <<: *env
      CF_DNS_API_TOKEN: ${CLOUDFLARE_DNS_API_TOKEN}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./traefik/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=web,websecure
      - traefik.http.routers.traefik.tls.certresolver=resolver
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - homepage.group=Network
      - homepage.name=Traefik
      - homepage.icon=traefik.png
      - homepage.href=https://traefik.${DOMAIN}
      - homepage.description=Reverse proxy
      - homepage.widget.type=traefik
      - homepage.widget.url=http://traefik:8080

  cloudflareddns:
    <<: *base
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflareddns
    environment:
      <<: *env
      API_KEY: ${CLOUDFLARE_DNS_API_TOKEN}
      ZONE: ${CLOUDFLARE_ZONE}
      SUBDOMAIN: ${CLOUDFLARE_SUBDOMAIN}
      PROXIED: false

  homepage:
    <<: *base
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    volumes:
      - ./homepage:/app/config
    environment:
      HOMEPAGE_ALLOWED_HOSTS: ${DOMAIN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.homepage.entrypoints=web,websecure
      - traefik.http.routers.homepage.tls.certresolver=resolver
      - traefik.http.services.homepage.loadbalancer.server.port=3000

  pihole:
    <<: *base
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
    environment:
      <<: *env
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
      FTLCONF_dns_listeningMode: all
      FTLCONF_dns_upstreams: 1.1.1.1;1.0.0.1
    volumes:
      - ./pihole:/etc/pihole
      - ./pihole/dnsmasq.d:/etc/dnsmasq.d
    networks:
      homelab:
        ipv4_address: ${PIHOLE_IP}
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)
      - traefik.http.routers.pihole.entrypoints=web,websecure
      - traefik.http.routers.pihole.tls.certresolver=resolver
      - traefik.http.services.pihole.loadbalancer.server.port=80
      - homepage.group=Network
      - homepage.name=Pi-hole
      - homepage.icon=pi-hole.png
      - homepage.href=https://pihole.${DOMAIN}/admin/
      - homepage.description=DNS server
      - homepage.widget.type=pihole
      - homepage.widget.url=http://pihole
      - homepage.widget.key=${PIHOLE_PASSWORD}
      - homepage.widget.version=6

  wireguard:
    <<: *base
    image: ghcr.io/wg-easy/wg-easy:15
    container_name: wireguard
    environment:
      <<: *env
      INIT_ENABLED: true
      INIT_HOST: ${PUBLIC_DOMAIN}
      INIT_PORT: 51820
      INIT_USERNAME: ${WIREGUARD_USER}
      INIT_PASSWORD: ${WIREGUARD_PASSWORD}
      INIT_DNS: ${PIHOLE_IP}
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1
    volumes:
      - ./wireguard:/etc/wireguard
      - /lib/modules:/lib/modules:ro
    dns:
      - ${PIHOLE_IP}
    labels:
      - traefik.enable=true
      - traefik.http.routers.wireguard.rule=Host(`wireguard.${DOMAIN}`)
      - traefik.http.routers.wireguard.entrypoints=web,websecure
      - traefik.http.routers.wireguard.tls.certresolver=resolver
      - traefik.http.services.wireguard.loadbalancer.server.port=51821
      - homepage.group=Network
      - homepage.name=WireGuard
      - homepage.icon=wireguard.png
      - homepage.href=https://wireguard.${DOMAIN}
      - homepage.description=VPN server
      - homepage.widget.type=wgeasy
      - homepage.widget.version=2
      - homepage.widget.url=http://wireguard:51821
      - homepage.widget.username=${WIREGUARD_USER}
      - homepage.widget.password=${WIREGUARD_PASSWORD}

  jellyfin:
    <<: *base
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    volumes:
      - ./jellyfin:/config
      - /data/media:/data/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)
      - traefik.http.routers.jellyfin.entrypoints=web,websecure
      - traefik.http.routers.jellyfin.tls.certresolver=resolver
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin.png
      - homepage.href=https://jellyfin.${DOMAIN}
      - homepage.description=Media server
      - homepage.widget.type=jellyfin
      - homepage.widget.url=http://jellyfin:8096
      - homepage.widget.key=${JELLYFIN_API_KEY}

  sonarr:
    <<: *base
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr:latest
    volumes:
      - ./sonarr:/config
      - /data/media/tv:/data/media/tv
      - /data/torrents/:/data/torrents
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.entrypoints=web,websecure
      - traefik.http.routers.sonarr.tls.certresolver=resolver
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - homepage.group=Media
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=https://sonarr.${DOMAIN}
      - homepage.description=TV series manager
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API_KEY}

  radarr:
    <<: *base
    container_name: radarr
    image: ghcr.io/linuxserver/radarr:latest
    volumes:
      - ./radarr:/config
      - /data/media/movies:/data/media/movies
      - /data/torrents:/data/torrents
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=web,websecure
      - traefik.http.routers.radarr.tls.certresolver=resolver
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - homepage.group=Media
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=https://radarr.${DOMAIN}
      - homepage.description=Movie manager
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}

  bazarr:
    <<: *base
    container_name: bazarr
    image: ghcr.io/linuxserver/bazarr:latest
    volumes:
      - ./bazarr:/config
      - /data/media:/data/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)
      - traefik.http.routers.bazarr.entrypoints=web,websecure
      - traefik.http.routers.bazarr.tls.certresolver=resolver
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - homepage.group=Download
      - homepage.name=Bazarr
      - homepage.icon=bazarr.png
      - homepage.href=https://bazarr.${DOMAIN}
      - homepage.description=Subtitle manager
      - homepage.widget.type=bazarr
      - homepage.widget.url=http://bazarr:6767
      - homepage.widget.key=${BAZARR_API_KEY}

  jackett:
    <<: *base
    container_name: jackett
    image: ghcr.io/linuxserver/jackett:latest
    volumes:
      - ./jackett:/config
      - /data/torrents:/data/torrents
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
      - traefik.http.routers.jackett.entrypoints=web,websecure
      - traefik.http.routers.jackett.tls.certresolver=resolver
      - traefik.http.services.jackett.loadbalancer.server.port=9117
      - homepage.group=Download
      - homepage.name=Jackett
      - homepage.icon=jackett.png
      - homepage.href=https://jackett.${DOMAIN}
      - homepage.description=Torrent indexer aggregator
      - homepage.widget.type=jackett
      - homepage.widget.url=http://jackett:9117
      - homepage.widget.password=${JACKETT_PASSWORD}

  flaresolverr:
    <<: *base
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.${DOMAIN}`)
      - traefik.http.routers.flaresolverr.entrypoints=web,websecure
      - traefik.http.routers.flaresolverr.tls.certresolver=resolver
      - traefik.http.services.flaresolverr.loadbalancer.server.port=8191
      - homepage.group=Download
      - homepage.name=FlareSolverr
      - homepage.icon=flaresolverr.png
      - homepage.href=https://flaresolverr.${DOMAIN}
      - homepage.description=Bypass Cloudflare protection

  byparr:
    <<: *base
    container_name: byparr
    image: ghcr.io/thephaseless/byparr:latest
    shm_size: 2gb
    environment:
      <<: *env
      PROXY: 127.0.0.1:2375
    labels:
      - traefik.enable=true
      - traefik.http.routers.byparr.rule=Host(`byparr.${DOMAIN}`)
      - traefik.http.routers.byparr.entrypoints=web,websecure
      - traefik.http.routers.byparr.tls.certresolver=resolver
      - traefik.http.services.byparr.loadbalancer.server.port=8191
      - homepage.group=Download
      - homepage.name=ByParr
      - homepage.icon=flaresolverr.png
      - homepage.href=https://byparr.${DOMAIN}
      - homepage.description=Bypass Cloudflare protection

  qbittorrent:
    <<: *base
    container_name: qbittorrent
    image: ghcr.io/linuxserver/qbittorrent:latest
    ports:
      - 6881:6881/tcp
      - 6881:6881/udp
    volumes:
      - ./qbittorrent:/config
      - /data/torrents:/data/torrents
      - /data/media:/data/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.${DOMAIN}`)
      - traefik.http.routers.qbittorrent.entrypoints=web,websecure
      - traefik.http.routers.qbittorrent.tls.certresolver=resolver
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
      - homepage.group=Download
      - homepage.name=qBittorrent
      - homepage.icon=qbittorrent.png
      - homepage.href=https://qbittorrent.${DOMAIN}
      - homepage.description=BitTorrent client
      - homepage.widget.type=qbittorrent
      - homepage.widget.url=http://qbittorrent:8080
      - homepage.widget.username=${QBITTORRENT_USERNAME}
      - homepage.widget.password=${QBITTORRENT_PASSWORD}

  homeassistant:
    <<: *base
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    privileged: true
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.homeassistant.rule=Host(`homeassistant.${DOMAIN}`)
      - traefik.http.routers.homeassistant.entrypoints=web,websecure
      - traefik.http.routers.homeassistant.tls.certresolver=resolver
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
      - homepage.group=Automation
      - homepage.name=Home Assistant
      - homepage.icon=home-assistant.png
      - homepage.href=https://homeassistant.${DOMAIN}
      - homepage.description=Home automation platform
      - homepage.widget.type=homeassistant
      - homepage.widget.url=http://homeassistant:8123
      - homepage.widget.key=${HOMEASSISTANT_API_KEY}

  browserless:
    <<: *base
    container_name: browserless
    image: ghcr.io/browserless/chromium
    shm_size: 2gb
    environment:
      <<: *env
      TOKEN: ${BROWSERLESS_CHROMIUM_TOKEN}
      TIMEOUT: 60000
      CORS: true
      CONCURRENT: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.browserless.rule=Host(`browserless.${DOMAIN}`)
      - traefik.http.routers.browserless.entrypoints=web,websecure
      - traefik.http.routers.browserless.tls.certresolver=resolver
      - traefik.http.services.browserless.loadbalancer.server.port=3000

  changedetection:
    <<: *base
    container_name: changedetection
    image: ghcr.io/dgtlmoon/changedetection.io
    environment:
      <<: *env
      BASE_URL: https://changedetection.${DOMAIN}
      DISABLE_VERSION_CHECK: true
      PLAYWRIGHT_DRIVER_URL: ${PLAYWRIGHT_DRIVER_URL}
    volumes:
      - ./changedetection/config:/config
      - ./changedetection/datastore:/datastore
    depends_on:
      browserless:
        condition: service_started
    labels:
      - traefik.enable=true
      - traefik.http.routers.changedetection.rule=Host(`changedetection.${DOMAIN}`)
      - traefik.http.routers.changedetection.entrypoints=web,websecure
      - traefik.http.routers.changedetection.tls.certresolver=resolver
      - traefik.http.services.changedetection.loadbalancer.server.port=5000
      - homepage.group=Automation
      - homepage.name=ChangeDetection
      - homepage.icon=changedetection.png
      - homepage.href=https://changedetection.${DOMAIN}
      - homepage.description=Website change detection
      - homepage.widget.type=changedetectionio
      - homepage.widget.url=http://changedetection:5000
      - homepage.widget.key=${CHANGEDETECTION_API_KEY}

  samba:
    <<: *base
    container_name: samba
    image: dperson/samba:latest
    ports:
      - 137:137/udp
      - 138:138/udp
      - 139:139/tcp
      - 445:445/tcp
    environment:
      <<: *env
      USERID: ${PUID}
      GROUPID: ${GUID}
    volumes:
      - /data:/data:z
    tmpfs:
      - /tmp
    command: '-s "data;/data;;no" -u "${SAMBA_USER};${SAMBA_PASSWORD}" -p -n -r'

  chrome:
    <<: *base
    image: gcr.io/zenika-hub/alpine-chrome:123
    command:
      - --no-sandbox
      - --disable-gpu
      - --disable-dev-shm-usage
      - --remote-debugging-address=0.0.0.0
      - --remote-debugging-port=9222
      - --hide-scrollbars

  meilisearch:
    <<: *base
    container_name: meilisearch
    image: getmeili/meilisearch:v1.13.3
    environment:
      <<: *env
      MEILI_NO_ANALYTICS: true
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
    volumes:
      - ./meilisearch:/meili_data

  karakeep:
    <<: *base
    container_name: karakeep
    image: ghcr.io/karakeep-app/karakeep:release
    environment:
      <<: *env
      KARAKEEP_API_KEY: ${KARAKEEP_API_KEY}
      MEILI_ADDR: http://meilisearch:7700
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      BROWSER_WEB_URL: http://chrome:9222
      DATA_DIR: /data
      NEXTAUTH_URL: https://karakeep.${DOMAIN}
      NEXTAUTH_SECRET: ${KARAKEEP_NEXTAUTH_SECRET}
    volumes:
      - ./karakeep:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.karakeep.rule=Host(`karakeep.${DOMAIN}`)
      - traefik.http.routers.karakeep.entrypoints=web,websecure
      - traefik.http.routers.karakeep.tls.certresolver=resolver
      - traefik.http.services.karakeep.loadbalancer.server.port=3000
      - homepage.group=Automation
      - homepage.name=KaraKeep
      - homepage.icon=karakeep.png
      - homepage.href=https://karakeep.${DOMAIN}
      - homepage.description=Bookmarks manager
      - homepage.widget.type=karakeep
      - homepage.widget.url=http://karakeep:3000
      - homepage.widget.key=${KARAKEEP_API_KEY}

networks:
  homelab:
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
        - subnet: fdcc:ad94:bacf:61a3::/64
    enable_ipv6: true
