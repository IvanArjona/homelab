x-base:
  &base
  restart: unless-stopped
  env_file:
    - .env

services:
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      CONTAINERS: 1 # Allow access to viewing containers
      POST: 0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  homepage:
    <<: *base
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    volumes:
      - ./homepage:/app/config
    environment:
      HOMEPAGE_ALLOWED_HOSTS: ${DOMAIN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.homepage.entrypoints=web
      - traefik.http.services.homepage.loadbalancer.server.port=3000

  wireguard:
    <<: *base
    image: ghcr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      PEERS: 1
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ./wireguard:/config
      - /lib/modules:/lib/modules

  traefik:
    <<: *base
    image: traefik:v3.4
    container_name: traefik
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.web.address=:80
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  pihole:
    <<: *base
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
    environment:
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
      FTLCONF_dns_listeningMode: all
      FTLCONF_dns_upstreams: 1.1.1.1;1.0.0.1;2606:4700:4700::1111;2606:4700:4700::1001
      FTLCONF_dns_dnssec: true
    volumes:
      - ./pihole:/etc/pihole
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)
      - traefik.http.routers.pihole.entrypoints=web
      - traefik.http.services.pihole.loadbalancer.server.port=80
      - homepage.group=Network
      - homepage.name=Pi-hole
      - homepage.icon=pi-hole.png
      - homepage.href=http://pihole.${DOMAIN}
      - homepage.description=DNS server
      - homepage.widget.type=pihole
      - homepage.widget.url=http://pihole
      - homepage.widget.key=${PIHOLE_PASSWORD}
      - homepage.widget.version=6

  jellyfin:
    <<: *base
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    volumes:
      - ./jellyfin:/config
      - /data/media:/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)
      - traefik.http.routers.jellyfin.entrypoints=web
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin.png
      - homepage.href=http://jellyfin.${DOMAIN}
      - homepage.description=Media server
      - homepage.widget.type=jellyfin
      - homepage.widget.url=http://jellyfin:8096
      - homepage.widget.key=${JELLYFIN_API_KEY}

  sonarr:
    <<: *base
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr:latest
    volumes:
      - ./sonarr:/config
      - /data/media/shows:/media/shows
      - /data/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.entrypoints=web
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - homepage.group=Download
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=http://sonarr.${DOMAIN}
      - homepage.description=TV series manager
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API_KEY}

  radarr:
    <<: *base
    container_name: radarr
    image: ghcr.io/linuxserver/radarr:latest
    volumes:
      - ./radarr:/config
      - /data/media/movies:/media/movies
      - /data/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=web
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - homepage.group=Download
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=http://radarr.${DOMAIN}
      - homepage.description=Movie manager
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}
      

  transmission:
    <<: *base
    container_name: transmission
    image: ghcr.io/linuxserver/transmission:latest
    ports:
      - 51413:51413
      - 51413:51413/udp
    volumes:
      - ./transmission:/data
      - /data/downloads:/downloads
      - /data/watch:/watch
    labels:
      - traefik.enable=true
      - traefik.http.routers.transmission.rule=Host(`transmission.${DOMAIN}`)
      - traefik.http.routers.transmission.entrypoints=web
      - traefik.http.services.transmission.loadbalancer.server.port=9091
      - homepage.group=Download
      - homepage.name=Transmission
      - homepage.icon=transmission.png
      - homepage.href=http://transmission.${DOMAIN}
      - homepage.description=BitTorrent client
      - homepage.widget.type=transmission
      - homepage.widget.url=http://transmission:9091

  homeassistant:
    <<: *base
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    privileged: true
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.homeassistant.rule=Host(`homeassistant.${DOMAIN}`)
      - traefik.http.routers.homeassistant.entrypoints=web
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
      - homepage.group=Home
      - homepage.name=Home Assistant
      - homepage.icon=home-assistant.png
      - homepage.href=http://homeassistant.${DOMAIN}
      - homepage.description=Home automation platform
      - homepage.widget.type=homeassistant
      - homepage.widget.url=http://homeassistant:8123
      - homepage.widget.key=${HOMEASSISTANT_API_KEY}

  changedetection:
    <<: *base
    container_name: changedetection
    image: ghcr.io/dgtlmoon/changedetection.io
    environment:
      BASE_URL: http://changedetection.${DOMAIN}
      DISABLE_VERSION_CHECK: true
    volumes:
      - ./changedetection:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.changedetection.rule=Host(`changedetection.${DOMAIN}`)
      - traefik.http.routers.changedetection.entrypoints=web
      - traefik.http.services.changedetection.loadbalancer.server.port=5000
      - homepage.group=Utils
      - homepage.name=ChangeDetection
      - homepage.icon=changedetection.png
      - homepage.href=http://changedetection.${DOMAIN}
      - homepage.description=Website change detection
      - homepage.widget.type=changedetectionio
      - homepage.widget.url=http://changedetection:5000
      - homepage.widget.key=${CHANGEDETECTION_API_KEY}

  samba:
    <<: *base
    container_name: samba
    image: dperson/samba:latest
    ports:
      - 137:137/udp
      - 138:138/udp
      - 139:139/tcp
      - 445:445/tcp
    environment:
      USERID: ${PUID}
      GROUPID: ${GUID}
    volumes:
      - /data:/data:z
    tmpfs:
      - /tmp
    command: '-s "data;/data;;no" -u "${SAMBA_USER};${SAMBA_PASSWORD}" -p -n -r'
